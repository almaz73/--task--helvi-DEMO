/**
 *  type {String} [fio|address|email]
 */

import './index.css'

import React, {Component} from 'react'
import {connect} from 'react-redux'
import {changeCombo} from 'action'


class Combo extends Component {
   constructor (props) {
      super (props)
      this.state = {
         active: false
      }
   }

   onInputChange (val) {
      this.props.changeCombo (
         (val == null) ? '' : this.refs.inp.value,
         this.props.type
      )
   }

   onMouseLeave () {
      this.onInputChange (null)
   }

   onFocus () {
      this.setState ({active: true})
   }

   onBlur () {
      this.setState ({active: false})
   }

   onChose (val) {
      this.refs.inp.value = val
      this.onInputChange (null)
   }

   render () {

      const {combo} = this.props.state

      return (
         <div
            onFocus={this.onFocus.bind (this)}
            onBlur={this.onBlur.bind (this)}
            onMouseLeave={this.onMouseLeave.bind (this)}>
            <input
               className="combobox"
               ref="inp"
               onChange={this.onInputChange.bind (this)}
            />
            <div className="combobox-down">
               {this.state.active &&
               combo &&
               combo.map &&
               combo.map ((el, index) => (
                  <div
                     key={index}
                     onMouseDown={this.onChose.bind (this, el)}
                  >{el}</div>
               ))}
            </div>
         </div>
      )
   }
}

const mapStateToProps = state => ({state})
const mapDispatchWithProps = {changeCombo}


export default connect (mapStateToProps, mapDispatchWithProps) (Combo)